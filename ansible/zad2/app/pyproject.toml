[tool.poetry]
name = "example-app"
version = "0.1.0"
description = "Example app for IaC learning purposes"
authors = ["mwidera <28962708+mwidera@users.noreply.github.com>"]
license = "MIT"
readme = "README.md"
packages = [{include = "example_app"}]

[build-system]
requires = ["setuptools", "poetry-core>=1.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = "^3.9"
Flask = "2.0.2"
Werkzeug = "2.0.3"
Jinja2 = "3.0.2"
Flask-Login = "0.5.0"
Flask-Migrate = "3.1.0"
WTForms = "3.0.0"
Flask-WTF = "1.0.0"
flask-sqlalchemy = "2.5.1"
SQLAlchemy = "1.4.29"
email-validator = "1.1.3"
gunicorn = "^20.1.0"
flask-restx = "0.5.1"
python-dotenv = "0.19.2"
Flask-Minify = "0.37"
taskipy = "^1.10.3"
psycopg2 = "^2.9.5"

black = "^22.10.0"
pylint = "^2.15.5"
pytest = "^7.2.0"
isort = "^5.10.1"
flake8 = "^5.0.4"
bandit = "^1.7.4"

[tool.pylint.'MESSAGES CONTROL']
max-line-length = 120
disable = "C0116, C0115, R0903"

[tool.taskipy.tasks]
lint = "pylint apps"
formatter = "black --check apps"
security = "bandit -r apps"
test = "pytest tests/"
server = "poetry run python run.py"
prod = "poetry run gunicorn --timeout 600 -b 0.0.0.0:8080 run:app"
